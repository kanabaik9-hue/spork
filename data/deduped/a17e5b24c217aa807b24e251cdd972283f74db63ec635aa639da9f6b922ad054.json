{"url": "https://docs.python.org/3/tutorial/", "title": "The Python Tutorial \u2014 Python 3.13.7 documentation", "headings": ["This page", "Navigation", "The Python Tutorial\u00b6", "This page", "Navigation"], "body": "Changelog 1. Whetting Your Appetite Tip This tutorial is designed for\nprogrammers that are new to the Python language,\nnot beginners who are new to programming. Python is an easy to learn, powerful programming language. It has efficient\nhigh-level data structures and a simple but effective approach to\nobject-oriented programming. Python\u2019s elegant syntax and dynamic typing,\ntogether with its interpreted nature, make it an ideal language for scripting\nand rapid application development in many areas on most platforms. The Python interpreter and the extensive standard library are freely available\nin source or binary form for all major platforms from the Python web site,\nhttps://www.python.org/, and may be freely distributed. The same site also\ncontains distributions of and pointers to many free third party Python modules,\nprograms and tools, and additional documentation. The Python interpreter is easily extended with new functions and data types\nimplemented in C or C++ (or other languages callable from C). Python is also\nsuitable as an extension language for customizable applications. This tutorial introduces the reader informally to the basic concepts and\nfeatures of the Python language and system. Be aware that it expects you to\nhave a basic understanding of programming in general. It helps to have a Python\ninterpreter handy for hands-on experience, but all examples are self-contained,\nso the tutorial can be read off-line as well. For a description of standard objects and modules, see The Python Standard Library.\nThe Python Language Reference gives a more formal definition of the language.  To write\nextensions in C or C++, read Extending and Embedding the Python Interpreter and\nPython/C API Reference Manual. There are also several books covering Python in depth. This tutorial does not attempt to be comprehensive and cover every single\nfeature, or even every commonly used feature. Instead, it introduces many of\nPython\u2019s most noteworthy features, and will give you a good idea of the\nlanguage\u2019s flavor and style. After reading it, you will be able to read and\nwrite Python modules and programs, and you will be ready to learn more about the\nvarious Python library modules described in The Python Standard Library. The Glossary is also worth going through. Changelog 1. Whetting Your Appetite", "tokens": ["changelog", "whet", "appetite", "tip", "tutorial", "design", "programmer", "new", "python", "language", "beginner", "new", "programming", "python", "easy", "learn", "powerful", "programming", "language", "efficient", "high", "level", "data", "structure", "simple", "effective", "approach", "object", "orient", "programming", "python", "elegant", "syntax", "dynamic", "typing", "interpret", "nature", "ideal", "language", "scripting", "rapid", "application", "development", "area", "platform", "python", "interpreter", "extensive", "standard", "library", "freely", "available", "source", "binary", "form", "major", "platform", "python", "web", "site", "freely", "distribute", "site", "contain", "distribution", "pointer", "free", "party", "python", "module", "program", "tool", "additional", "documentation", "python", "interpreter", "easily", "extend", "new", "function", "datum", "type", "implement", "c", "language", "callable", "c", "python", "suitable", "extension", "language", "customizable", "application", "tutorial", "introduce", "reader", "informally", "basic", "concept", "feature", "python", "language", "system", "aware", "expect", "basic", "understanding", "programming", "general", "help", "python", "interpreter", "handy", "hand", "experience", "example", "self", "contain", "tutorial", "read", "line", "description", "standard", "object", "module", "python", "standard", "library", "python", "language", "reference", "formal", "definition", "language", "write", "extension", "c", "read", "extending", "embed", "python", "interpreter", "python", "c", "api", "reference", "manual", "book", "cover", "python", "depth", "tutorial", "attempt", "comprehensive", "cover", "single", "feature", "commonly", "use", "feature", "instead", "introduce", "python", "noteworthy", "feature", "good", "idea", "language", "flavor", "style", "read", "able", "read", "write", "python", "module", "program", "ready", "learn", "python", "library", "module", "describe", "python", "standard", "library", "glossary", "worth", "changelog", "whet", "appetite"], "metadata": {"url": "https://docs.python.org/3/tutorial/", "title": "The Python Tutorial \u2014 Python 3.13.7 documentation", "headings": ["This page", "Navigation", "The Python Tutorial\u00b6", "This page", "Navigation"], "content_length": 2321, "lang": "en", "canonical_url": "https://docs.python.org/3/tutorial/index.html", "outbound_links": ["https://www.python.org/", "../whatsnew/changelog.html", "appetite.html", "../bugs.html", "https://github.com/python/cpython/blob/main/Doc/tutorial/index.rst?plain=1", "../genindex.html", "../py-modindex.html", "appetite.html", "../whatsnew/changelog.html", "https://www.python.org/", "../index.html", "", "#the-python-tutorial", "https://www.python.org/", "../library/index.html#library-index", "../reference/index.html#reference-index", "../extending/index.html#extending-index", "../c-api/index.html#c-api-index", "../library/index.html#library-index", "../glossary.html#glossary", "appetite.html", "interpreter.html", "interpreter.html#invoking-the-interpreter", "interpreter.html#argument-passing", "interpreter.html#interactive-mode", "interpreter.html#the-interpreter-and-its-environment", "interpreter.html#source-code-encoding", "introduction.html", "introduction.html#using-python-as-a-calculator", "introduction.html#numbers", "introduction.html#text", "introduction.html#lists", "introduction.html#first-steps-towards-programming", "controlflow.html", "controlflow.html#if-statements", "controlflow.html#for-statements", "controlflow.html#the-range-function", "controlflow.html#break-and-continue-statements", "controlflow.html#else-clauses-on-loops", "controlflow.html#pass-statements", "controlflow.html#match-statements", "controlflow.html#defining-functions", "controlflow.html#more-on-defining-functions", "controlflow.html#default-argument-values", "controlflow.html#keyword-arguments", "controlflow.html#special-parameters", "controlflow.html#positional-or-keyword-arguments", "controlflow.html#positional-only-parameters", "controlflow.html#keyword-only-arguments", "controlflow.html#function-examples", "controlflow.html#recap", "controlflow.html#arbitrary-argument-lists", "controlflow.html#unpacking-argument-lists", "controlflow.html#lambda-expressions", "controlflow.html#documentation-strings", "controlflow.html#function-annotations", "controlflow.html#intermezzo-coding-style", "datastructures.html", "datastructures.html#more-on-lists", "datastructures.html#using-lists-as-stacks", "datastructures.html#using-lists-as-queues", "datastructures.html#list-comprehensions", "datastructures.html#nested-list-comprehensions", "datastructures.html#the-del-statement", "datastructures.html#tuples-and-sequences", "datastructures.html#sets", "datastructures.html#dictionaries", "datastructures.html#looping-techniques", "datastructures.html#more-on-conditions", "datastructures.html#comparing-sequences-and-other-types", "modules.html", "modules.html#more-on-modules", "modules.html#executing-modules-as-scripts", "modules.html#the-module-search-path", "modules.html#compiled-python-files", "modules.html#standard-modules", "modules.html#the-dir-function", "modules.html#packages", "modules.html#importing-from-a-package", "modules.html#intra-package-references", "modules.html#packages-in-multiple-directories", "inputoutput.html", "inputoutput.html#fancier-output-formatting", "inputoutput.html#formatted-string-literals", "inputoutput.html#the-string-format-method", "inputoutput.html#manual-string-formatting", "inputoutput.html#old-string-formatting", "inputoutput.html#reading-and-writing-files", "inputoutput.html#methods-of-file-objects", "inputoutput.html#saving-structured-data-with-json", "errors.html", "errors.html#syntax-errors", "errors.html#exceptions", "errors.html#handling-exceptions", "errors.html#raising-exceptions", "errors.html#exception-chaining", "errors.html#user-defined-exceptions", "errors.html#defining-clean-up-actions", "errors.html#predefined-clean-up-actions", "errors.html#raising-and-handling-multiple-unrelated-exceptions", "errors.html#enriching-exceptions-with-notes", "classes.html", "classes.html#a-word-about-names-and-objects", "classes.html#python-scopes-and-namespaces", "classes.html#scopes-and-namespaces-example", "classes.html#a-first-look-at-classes", "classes.html#class-definition-syntax", "classes.html#class-objects", "classes.html#instance-objects", "classes.html#method-objects", "classes.html#class-and-instance-variables", "classes.html#random-remarks", "classes.html#inheritance", "classes.html#multiple-inheritance", "classes.html#private-variables", "classes.html#odds-and-ends", "classes.html#iterators", "classes.html#generators", "classes.html#generator-expressions", "stdlib.html", "stdlib.html#operating-system-interface", "stdlib.html#file-wildcards", "stdlib.html#command-line-arguments", "stdlib.html#error-output-redirection-and-program-termination", "stdlib.html#string-pattern-matching", "stdlib.html#mathematics", "stdlib.html#internet-access", "stdlib.html#dates-and-times", "stdlib.html#data-compression", "stdlib.html#performance-measurement", "stdlib.html#quality-control", "stdlib.html#batteries-included", "stdlib2.html", "stdlib2.html#output-formatting", "stdlib2.html#templating", "stdlib2.html#working-with-binary-data-record-layouts", "stdlib2.html#multi-threading", "stdlib2.html#logging", "stdlib2.html#weak-references", "stdlib2.html#tools-for-working-with-lists", "stdlib2.html#decimal-floating-point-arithmetic", "venv.html", "venv.html#introduction", "venv.html#creating-virtual-environments", "venv.html#managing-packages-with-pip", "whatnow.html", "interactive.html", "interactive.html#tab-completion-and-history-editing", "interactive.html#alternatives-to-the-interactive-interpreter", "floatingpoint.html", "floatingpoint.html#representation-error", "appendix.html", "appendix.html#interactive-mode", "appendix.html#error-handling", "appendix.html#executable-python-scripts", "appendix.html#the-interactive-startup-file", "appendix.html#the-customization-modules", "../whatsnew/changelog.html", "appetite.html", "../bugs.html", "https://github.com/python/cpython/blob/main/Doc/tutorial/index.rst?plain=1", "../genindex.html", "../py-modindex.html", "appetite.html", "../whatsnew/changelog.html", "https://www.python.org/", "../index.html", "", "../copyright.html", "/license.html", "https://www.python.org/psf/donations/", "/bugs.html", "https://www.sphinx-doc.org/"]}}